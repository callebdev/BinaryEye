apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
	compileSdkVersion sdk_version
	buildToolsVersion build_tools_version

	defaultConfig {
		minSdkVersion 24
		targetSdkVersion sdk_version

		versionCode 56
		versionName '1.23.0'

		// it's recommended to set this value to the lowest API level
		// able to provide all the functionality
		renderscriptTargetApi 24
		renderscriptSupportModeEnabled true

		testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

		buildConfigField 'boolean', 'IS_CATALINA', is_catalina.toString()
	}

	signingConfigs {
		config {
			keyAlias System.getenv('ANDROID_KEY_ALIAS')
			keyPassword System.getenv('ANDROID_KEY_PASSWORD')
			storePassword System.getenv('ANDROID_STORE_PASSWORD')
			def filePath = System.getenv('ANDROID_KEYFILE')
			storeFile filePath ? file(filePath) : null
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		androidTest.java.srcDirs += 'src/androidTest/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
	}

	buildTypes {
		debug {
			applicationIdSuffix '.debug'
		}

		release {
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			minifyEnabled true
			shrinkResources true
			signingConfig signingConfigs.config
		}
	}
}

dependencies {
	androidTestImplementation ('androidx.test.ext:junit:1.1.1') {
		exclude module: 'support-annotations'
	}
	androidTestImplementation ('androidx.test:rules:1.2.0') {
		exclude module: 'support-annotations'
	}
	testImplementation 'junit:junit:4.12'

	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
	implementation 'androidx.appcompat:appcompat:1.1.0'
	implementation 'com.google.android.material:material:1.1.0'
	implementation 'com.google.zxing:core:3.4.0'
	implementation 'com.github.markusfisch:CameraView:1.8.4'
	implementation 'com.github.markusfisch:ScalingImageView:1.2.0'
}
